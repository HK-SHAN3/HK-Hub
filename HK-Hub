local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
   Name = "HK Hub",
   Icon = 0, -- Icon in Topbar. Can use Lucide Icons (string) or Roblox Image (number). 0 to use no icon (default).
   LoadingTitle = "HK Hub",
   LoadingSubtitle = "by HK_SHAN3",
   Theme = "Default", -- Check https://docs.sirius.menu/rayfield/configuration/themes

   DisableRayfieldPrompts = false,
   DisableBuildWarnings = false, -- Prevents Rayfield from warning when the script has a version mismatch with the interface

   ConfigurationSaving = {
      Enabled = true,
      FolderName = nil, -- Create a custom folder for your hub/game
      FileName = "Big Hub"
   },

   Discord = {
      Enabled = false, -- Prompt the user to join your Discord server if their executor supports it
      Invite = "noinvitelink", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ ABCD would be ABCD
      RememberJoins = true -- Set this to false to make them join the discord every time they load it up
   },

   KeySystem = false, -- Set this to true to use our key system
   KeySettings = {
      Title = "Untitled",
      Subtitle = "Key System",
      Note = "No method of obtaining the key is provided", -- Use this to tell the user how to get a key
      FileName = "Key", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
      SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
      GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
      Key = {"Hello"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
   }
})

local Tab = Window:CreateTab("Local Player", 4483362458) -- Title, Image

local Section = Tab:CreateSection("Local Player")

local Slider = Tab:CreateSlider({
   Name = "Walkspeed",
   Range = {16, 500},
   Increment = 1,
   Suffix = "WalkSpeed",
   CurrentValue = 16,
   Flag = "SliderWS", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
game:GetService("Players").LocalPlayer.Character:WaitForChild("Humanoid").WalkSpeed = Value
   -- The function that takes place when the slider changes
   -- The variable (Value) is a number which correlates to the value the slider is currently at
   end,
})

local Slider = Tab:CreateSlider({
   Name = "Jump Power",
   Range = {60, 500},
   Increment = 1,
   Suffix = "Jump Power",
   CurrentValue = 60,
   Flag = "SliderJS", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
game:GetService("Players").LocalPlayer.Character:WaitForChild("Humanoid").JumpPower = Value
   -- The function that takes place when the slider changes
   -- The variable (Value) is a number which correlates to the value the slider is currently at
   end,
})

local Button = Tab:CreateButton({
   Name = "Fly (Npt mine)",
   Callback = function()
loadstring("\108\111\97\100\115\116\114\105\110\103\40\103\97\109\101\58\72\116\116\112\71\101\116\40\40\39\104\116\116\112\115\58\47\47\103\105\115\116\46\103\105\116\104\117\98\117\115\101\114\99\111\110\116\101\110\116\46\99\111\109\47\109\101\111\122\111\110\101\89\84\47\98\102\48\51\55\100\102\102\57\102\48\97\55\48\48\49\55\51\48\52\100\100\100\54\55\102\100\99\100\51\55\48\47\114\97\119\47\101\49\52\101\55\52\102\52\50\53\98\48\54\48\100\102\53\50\51\51\52\51\99\102\51\48\98\55\56\55\48\55\52\101\98\51\99\53\100\50\47\97\114\99\101\117\115\37\50\53\50\48\120\37\50\53\50\48\102\108\121\37\50\53\50\48\50\37\50\53\50\48\111\98\102\108\117\99\97\116\111\114\39\41\44\116\114\117\101\41\41\40\41\10\10")()
   -- The function that takes place when the button is pressed
   end,
})

local Button = Tab:CreateButton({
   Name = "NoClip (Not mine)",
   Callback = function()
   -- The function that takes place when the button is pressed
   end,
})

local Tab = Window:CreateTab("Admins", 4483362458) -- Title, Image

local Button = Tab:CreateButton({
   Name = "Infinite Yield",
   Callback = function()
loadstring(game:HttpGet('https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source'))()
   -- The function that takes place when the button is pressed
   end,
})

local Button = Tab:CreateButton({
   Name = "Nameless Admin (OP)",
   Callback = function()
loadstring(game:HttpGet('https://raw.githubusercontent.com/FilteringEnabled/NamelessAdmin/main/Source'))()
   -- The function that takes place when the button is pressed
   end,
})

local Button = Tab:CreateButton({
   Name = "Fates Admin",
   Callback = function()
loadstring(game:HttpGet("https://raw.githubusercontent.com/fatesc/fates-admin/main/main.lua"))();
   -- The function that takes place when the button is pressed
   end,
})

local Tab = Window:CreateTab("ESP", 4483362458) -- Title, Image

local Toggle = Tab:CreateToggle({
   Name = "Box ESP",
   CurrentValue = false,
   Flag = "ToggleBESP", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
--// Universal Box ESP (Works on Arsenal and other games) -- settings local settings = { defaultcolor = Color3.fromRGB(255,0,0), teamcheck = false, teamcolor = true }; -- services local runService = game:GetService("RunService"); local players = game:GetService("Players"); -- variables local localPlayer = players.LocalPlayer; local camera = workspace.CurrentCamera; -- functions local newVector2, newColor3, newDrawing = Vector2.new, Color3.new, Drawing.new; local tan, rad = math.tan, math.rad; local round = function(...) local a = {}; for i,v in next, table.pack(...) do a[i] = math.round(v); end return unpack(a); end; local wtvp = function(...) local a, b = camera.WorldToViewportPoint(camera, ...) return newVector2(a.X, a.Y), b, a.Z end; local espCache = {}; local function createEsp(player) local drawings = {}; drawings.box = newDrawing("Square"); drawings.box.Thickness = 1; drawings.box.Filled = false; drawings.box.Color = settings.defaultcolor; drawings.box.Visible = false; drawings.box.ZIndex = 2; drawings.boxoutline = newDrawing("Square"); drawings.boxoutline.Thickness = 3; drawings.boxoutline.Filled = false; drawings.boxoutline.Color = newColor3(); drawings.boxoutline.Visible = false; drawings.boxoutline.ZIndex = 1; espCache[player] = drawings; end local function removeEsp(player) if rawget(espCache, player) then for _, drawing in next, espCache[player] do drawing:Remove(); end espCache[player] = nil; end end local function updateEsp(player, esp) local character = player and player.Character; if character then local cframe = character:GetModelCFrame(); local position, visible, depth = wtvp(cframe.Position); esp.box.Visible = visible; esp.boxoutline.Visible = visible; if cframe and visible then local scaleFactor = 1 / (depth * tan(rad(camera.FieldOfView / 2)) * 2) * 1000; local width, height = round(4 * scaleFactor, 5 * scaleFactor); local x, y = round(position.X, position.Y); esp.box.Size = newVector2(width, height); esp.box.Position = newVector2(round(x - width / 2, y - height / 2)); esp.box.Color = settings.teamcolor and player.TeamColor.Color or settings.defaultcolor; esp.boxoutline.Size = esp.box.Size; esp.boxoutline.Position = esp.box.Position; end else esp.box.Visible = false; esp.boxoutline.Visible = false; end end -- main for _, player in next, players:GetPlayers() do if player ~= localPlayer then createEsp(player); end end players.PlayerAdded:Connect(function(player) createEsp(player); end); players.PlayerRemoving:Connect(function(player) removeEsp(player); end) runService:BindToRenderStep("esp", Enum.RenderPriority.Camera.Value, function() for player, drawings in next, espCache do if settings.teamcheck and player.Team == localPlayer.Team then continue; end if drawings and player ~= localPlayer then updateEsp(player, drawings); end end end)
   -- The function that takes place when the toggle is pressed
   -- The variable (Value) is a boolean on whether the toggle is true or false
   end,
})

